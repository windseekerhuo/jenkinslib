#!groovy
@Library('jenkinslib') _

def tools= new org.devops.tools()


String workspace=/data/jenkins/workspace

pipeline{
    agent { node { lable 'master'
                  customWorkspace "${workspace}"
            }  
    }
    options {
        timestamps()
        skipDefaultCheckout()
        disableConcurrentBuild()
        timeout(time:1,unit:'HOURS')
    stages {
        stage("GetCode"){
             when{ environment name:'test',value:'abde'}
             steps{
                  timeout(time:5,unit:"MINUTES"){
                  		script{
							println('获取代码');
							println("${test}");
							
							input id:'Test',message:'我们是否继续？',ok:'是,继续吧',parameters: [choice(choices: "choice1\nchoice2\n",description: 'Choose an option', name: 'Options')]
		
						}
             }
        }
		stage("01"){
			failFast true
			parallel {
				//构建
				stage("Build"){
					steps{
						println('应用打包')
						
						mvnHome  = tool "M2"
						println(mvnHome)
						
						sh "${mvnHome}/bin/mvn --version"	
					}
				
				//代码扫描
				stage("CodeScan"){
					steps{
						timeout(time:30,unit:"MINUTES")
						script{
							println("代码扫描")
							
							
							tools.PrintMes("this is my lib!")
						}
					}
				}
			}
		}
		post {
			always{
				script{
						println("always")
				}
			}
			success{
				script{
						currentBuild.description = "\n 构建成功"
				}
			}
			failure{
				script{
						currentBuild.description = "\n 构建失败"
				}
			}
			aborted{
				script{
						currentBuild.description = "\n 构建取消"
				}
			}
		}
}
